exp - Expense Buddy console (command-line version)

Use for:
- Entering expenses
- Tracking monthly and yearly summaries

Dependencies:
- Unix shell, awk

License:
  MIT

Manual:

Run 'exp help' and 'exp help [command]' for more information.

Set the EXPFILE env var to set the active expense file. If EXPFILE is not set, 
by default the ~/.expenses file will be used.

Add an expense -
  $ exp add "bus fare" 12.00 commute 2019-04-01 08:00
  $ exp add "buy cat food" 160.50 grocery

List all expense items by year, year/month, year/month/day, date range
  $ exp list 2019
  $ exp list 2019-04
  $ exp list 2019-04-01
  $ exp list 2019-04-01 2019-04-30

    (sample output)

    2019-04-06   pay water bill                    123.45  utilities 
    2019-04-06   donuts and coffee                 185.00  coffee    
    2019-04-07   dinner at peri peri               441.00  dine_out  
    2019-04-21   taxi to capitol commons           100.00  commute   
    2019-04-22   uber to home                      169.00  commute   
    2019-04-22   uber to office                    143.00  commute   
    --------------------------------------------------------------------
    Totals                                        1161.45              

List all expense of category 'dine_out' by year, year/month, year/month/day, date range

  $ exp list dine_out 2019
  $ exp list dine_out 2019-04
  $ exp list dine_out 2019-04-01
  $ exp list dine_out 2019-04-01 2019-04-30

If 'exp list' is run without any parameters, it defaults to the current year/month.


List category totals by year, year/month, year/month/day, date range
  $ exp cat 2019
  $ exp cat 2019-04
  $ exp cat 2019-04-01
  $ exp cat 2019-04-01 2019-04-30

    (sample output)

    grocery         92216.79
    dine_out        43159.97
    medical         38400.00
    commute         26447.00
    household       10865.25
    coffee           2407.50
    utilities        1000.00
    movie             585.00
    ----------------------------
    Totals         215081.51

If 'exp cat' is run without any parameters, it defaults to the current year.


List year totals -
  $ exp ytd 2019

    (sample output)

    January         55858.18
    February        25758.60
    March           37618.26
    April           18572.55
    May             21870.64
    June            23050.40
    July            32352.88
    August              0.00
    September           0.00
    October             0.00
    November            0.00
    December            0.00
    ------------------------
    Totals         215081.51

If 'exp ytd' is run without any parameters, it defaults to the current year.


Edit an expense -
  First, get the record number by reading the rightmost #nnnn column from
  'exp list' command.

  Then specify the record number in 'exp edit <recno>' command. You will be 
  prompted interactively to edit each field in the expense.

  Example:
  $ exp list 2019-04-01   (find the #nnnn record number in the rightmost column)
  $ exp edit 1895         (where #1895 was displayed from the 'exp list' command)


Delete an expense -
  First, get the record number by reading the rightmost #nnnn column from
  'exp list' command.

  Then specify the record number in 'exp del <recno>' command. You will be 
  prompted whether to delete the record.

  Example:
  $ exp list 2019-04-01   (find the #nnnn record number in the rightmost column)
  $ exp del 1895         (where #1895 was displayed from the 'exp list' command)


Contact:
  Twitter: @robdelacruz
  Source: http://github.com/robdelacruz/exp

